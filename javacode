import  itertools
class Newspaper:
    def _init_(self, name, prices):
        self.name = name
        self.prices = prices

    def weekly_cost(self):
        return sum(self.prices)

TOI = Newspaper("TOI", [3, 3, 3, 3, 3, 5, 6])
Hindu = Newspaper("Hindu", [2.5, 2.5, 2.5, 2.5, 2.5, 4, 4])
ET = Newspaper("ET", [4, 4, 4, 4, 4, 4, 10])
BM = Newspaper("BM", [1.5, 1.5, 1.5, 1.5, 1.5, 1.5, 1.5])
HT = Newspaper("HT", [2, 2, 2, 2, 2, 4, 4])

newspapers = [TOI, Hindu, ET, BM, HT]

def find_combinations(budget, newspapers):
    combinations = []
    for i in range(1, len(newspapers)):
        for c in itertools.combinations(newspapers, i):
            cost = sum([n.weekly_cost() for n in c])
            if cost <= budget:
                combinations.append([n.name for n in c])
    return combinations

print(find_combinations(40, newspapers))

print(find_combinations(35, newspapers))
